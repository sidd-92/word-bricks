{"version":3,"sources":["script/trie.js","script/load.js","script/listLetters.js","script/randomWord.js","script/arrange.js","script/wordProvider.js","script/wordUnshuffled.js"],"names":["Node","keys","Map","end","setEnd","isEnd","exports","Trie","root","add","input","node","length","has","set","substr","get","isWord","word","print","words","Array","search","string","size","letter","concat","push","undefined","String","loadDoc","url","cFunction","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","open","send","listOfLetters","givenText","document","createElement","$","addClass","attr","draggable","id","ondragstart","ondragend","textnode","createTextNode","appendChild","getElementById","randomWordSelector","wordList","random","Math","floor","Object","wordA","console","log","arrange","radius","fields","container","width","height","angle","step","PI","each","x","round","cos","y","sin","window","text","css","left","top","letterList","randomizer","circleArrange","initializeBeforeStart","btnId","newWord","shuffleLetters","elems","click","tempnewWord","split","shuffle","join","removeNode","toggleClass","lengthOfChild","childNodes","i","remove","children","punctuationless","replace","finalString","array","j","temp","dictionary","wordProvider","trie","meTrie","processWordList","responseText"],"mappings":"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","file":"wordUnshuffled.82c4183b.map","sourceRoot":"..","sourcesContent":["\n/**\n * Initialize a Trie\n */\n\n/**\n * Create a Node with\n * 1. Keys (Letters / Prefixes)\n * 2. End\n *\n * Add Two Helper Function\n * 1. setEnd\n * 2. isEnd\n */\nlet Node = function() {\n    this.keys = new Map();\n    this.end = false;\n    this.setEnd = function() {\n      this.end = true;\n    };\n    this.isEnd = function() {\n      return this.end;\n    };\n  };\n  \n  /**\n   * Create a Trie\n   * 1. Add()\n   * 2. Search()\n   */\n  \n  exports.Trie = function() {\n    this.root = new Node();\n  \n    //Add Function\n    //gets the input and sets the node to the root if no node is provided\n    this.add = function(input, node = this.root) {\n      if (input.length == 0) {\n        node.setEnd();\n        return;\n      } else if (!node.keys.has(input[0])) {\n        node.keys.set(input[0], new Node());\n        return this.add(input.substr(1), node.keys.get(input[0]));\n      } else {\n        return this.add(input.substr(1), node.keys.get(input[0]));\n      }\n    };\n  \n    this.isWord = function(word) {\n      let node = this.root;\n      while (word.length > 1) {\n        if (!node.keys.has(word[0])) {\n          return false;\n        } else {\n          node = node.keys.get(word[0]);\n          word = word.substr(1);\n        }\n      }\n      return node.keys.has(word) && node.keys.get(word).isEnd() ? true : false;\n    };\n    this.print = function() {\n      let words = new Array();\n      let search = function(node, string) {\n        if (node.keys.size != 0) {\n          for (let letter of node.keys.keys()) {\n            search(node.keys.get(letter), string.concat(letter));\n          }\n          if (node.isEnd()) {\n            words.push(string);\n          }\n        } else {\n          string.length > 0 ? words.push(string) : undefined;\n          return;\n        }\n      };\n      search(this.root, new String());\n      return words.length > 0 ? words : \"np\";\n    };\n  };\n\n  ","\n/**\n * @name loadDoc\n * @param {*} url A Url\n * @param {*} cFunction Callback Function\n * @description Takes in a URL and Callback to Process the Words\n */\nexports.loadDoc = function(url, cFunction) {\n    var xhttp;\n    xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4 && this.status == 200) {\n        cFunction(this);\n      }\n    };\n    xhttp.open(\"GET\", url, true);\n    xhttp.send();\n  }\n  ","//draggable=\"true\" id=\"src_copy\" ondragstart=\"dragstart_handler(event);\" ondragend=\"dragend_handler(event);\nexports.listOfLetters = function(givenText) {\n  var node = document.createElement(\"div\"); // Create a <p> node\n  $(node).addClass(\"field transform\");\n\n  $(node).attr({\n    draggable: true,\n    id: \"src_copy\",\n    ondragstart: \"dragstart_handler(event)\",\n    ondragend: \"dragend_handler(event)\"\n  });\n\n  var textnode = document.createTextNode(givenText); // Create a text node\n  node.appendChild(textnode); // Append the text to <P>\n  document.getElementById(\"container\").appendChild(node); // Append <li> to <ul> with id=\"myList\"\n  //element = document.querySelectorAll('p.answers');\n};\n","/**\n * @name randomWordSelector\n * @returns {*String newWord} Returns a newWord\n */\nexports.randomWordSelector = function(wordList) {\n    let random = Math.floor(Math.random() * Object.keys(wordList).length) + 0;\n  \n    /* \n      */\n    wordA = Object.keys(wordList);\n    console.log(wordA);\n    return wordA[random];\n  }","\nexports.arrange = function (radius, fields) {\n  \n  var container = $(\"#container\");\n  var width = container.width();\n  var height = container.height();\n  var angle = 0,\n    step = (2 * Math.PI) / fields.length;\n  fields.each(function() {\n    var x = Math.round(\n      width / 2 + radius * Math.cos(angle) - $(this).width() / 2\n    );\n    var y = Math.round(\n      height / 2 + radius * Math.sin(angle) - $(this).height() / 2\n    );\n    if (window.console) {\n      console.log($(this).text(), x, y);\n    }\n    $(this).css({\n      left: x + \"px\",\n      top: y + \"px\"\n    });\n    angle += step;\n  });\n}\n","import letterList from \"./listLetters\";\nimport randomizer from \"./randomWord\";\nimport circleArrange from \"./arrange\";\nlet listOfLetters = letterList.listOfLetters;\nlet randomWordSelector = randomizer.randomWordSelector;\nlet arrange = circleArrange.arrange;\n/**\n * @name initializeBeforeStart\n * @param {*String newWord} New Word Provided by Random Word Selector\n * @param {*Object answerList } Reset the previous level Answers\n * @param {*Object completedWords} Provide the list of words completed\n * @description This function will take in 3 parameters and initialize values before start of the game\n */\n\nexports.initializeBeforeStart = function(wordList, btnId) {\n  let newWord = randomWordSelector(wordList);\n  //console.log(\"NEW WORD TYPE:\", typeof newWord);\n  console.log(\"NEW WORD\", newWord);\n  //let completedWords = new Object();\n  shuffleLetters(newWord);\n  var elems = $(\".field\");\n  let radius = 100;\n  arrange(radius, elems);\n  //console.log(\"Given Letters:\", splitWord(newWord));\n  //console.log( \"New Word= \",  newWord, \"CompletedWords= \", completedWords );\n\n  $(btnId).click(function() {\n    var tempnewWord = newWord.split(\"\");\n    tempnewWord = shuffle(tempnewWord);\n    tempnewWord = tempnewWord.join(\"\");\n    removeNode();\n    shuffleLetters(tempnewWord);\n    var elems = $(\".field\");\n    arrange(radius, elems);\n    $(\".transform\").toggleClass(\"transform-active\");\n  });\n};\nfunction removeNode() {\n  var lengthOfChild = container.childNodes.length;\n  let i = 7;\n  var x = $(\"#container > div + div\");\n  x.remove();\n  console.log(container.children);\n  //console.log(container.removeChild(container.childNodes[7]));\n  //console.log(container.removeChild(container.childNodes[8]));\n\n  //console.log(childNode.nextElementSibling);\n\n  //while(container.hasChildNodes()){\n  //container.removeChild(container.childNodes[7]);\n  //}\n}\n/**\n * Shuffle The Letters\n */\nfunction shuffleLetters(newWord) {\n  var punctuationless = newWord.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\");\n  var finalString = punctuationless.replace(/\\s{2,}/g, \" \");\n  for (let i = 0; i < finalString.length; i++) {\n    listOfLetters(finalString[i]);\n  }\n}\n\nfunction shuffle(array) {\n  var i = 0,\n    j = 0,\n    temp = null;\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n","// *All imports\nimport Trie from \"./trie\";\n\nimport dictionary from \"./load\";\nimport wordProvider from \"./wordProvider\";\n\n// !Needed for the game mechanisms\nlet wordList = new Object();\nlet wordA = [];\n\nlet loadDoc = dictionary.loadDoc;\nlet initializeBeforeStart = wordProvider.initializeBeforeStart;\n\n//!Initis for Imports\nlet trie = Trie.Trie;\n\n//!Base URL\nconst url = \"https://codepen.io/Sidd92/pen/0abe5f0ad3a8366367426a9f3c51e328.js\";\n//const debugUrl = \"https://codepen.io/Sidd92/pen/wxRJQZ.js\";\n\nlet meTrie = new trie();\nloadDoc(url, processWordList);\n\n/**\n * @name loadDoc\n * @param {*} url A Url\n * @param {*} cFunction Callback Function\n * @description Takes in a URL and Callback to Process the Words\n */\nfunction loadDoc(url, cFunction) {\n  var xhttp;\n  xhttp = new XMLHttpRequest();\n  xhttp.onreadystatechange = function() {\n    if (this.readyState == 4 && this.status == 200) {\n      cFunction(this);\n    }\n  };\n  xhttp.open(\"GET\", url, true);\n  xhttp.send();\n}\n\n/**\n * @name ProcessWordList\n * @param {*} xhttp Takes in the Object xhttp passed by loadDoc\n * @description Takes in a HTTP object and gets the responseText\n */\nfunction processWordList(xhttp) {\n  wordA = xhttp.responseText.split(\",\");\n  for (let i = 0; i < wordA.length; i++) {\n    meTrie.add(wordA[i]);\n    wordList[wordA[i]] = wordA[i];\n  }\n  console.log(\"TRIE\", meTrie);\n\n  initializeBeforeStart(wordList, \"#button\");\n}\n\nconsole.log(\"TRIE PRINT\", meTrie.print());\n//let newWord = randomWordSelector();\n\n/**\n * Remove Existing Nodes\n */\n\n/**\n * UTILITY METHODS\n * 1. Arrange In a Circle\n * 2. Create Node/List\n * 3. Split Word\n * 4. Shuffle\n * 5. bigWordsFirst\n * 6. smallWordsFirst\n */\n\n/*\nfunction createList(givenText) {\n  var node = document.createElement(\"p\"); // Create a <p> node\n  $(node).addClass(\"pills\");\n  var textnode = document.createTextNode(givenText); // Create a text node\n  node.appendChild(textnode); // Append the text to <P>\n  document.getElementById(\"list\").appendChild(node); // Append <li> to <ul> with id=\"myList\"\n  //element = document.querySelectorAll('p.answers');\n}\n*/\n/*\nfunction splitWord(word) {\n  var letters = [];\n  for (var i = 0; i < word.length; i++) {\n    letters.push(word[i]);\n  }\n  letters = shuffle(letters);\n  return letters.join(\",\");\n}\n*/\n"]}